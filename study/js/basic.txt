jquery 장점
-호환성이 우수 (크로스브라우징이 가능)
-디자이너가 사용할 줄 아는 선택자 / css요소를 사용
-플러그인이 많음

단점
-프로그램 언어이므로 기본적인 논리와 문법이 필요

기본문법
$('선택자').method()

문법이 정상적인지 확인방법
  alert();
  document.write();
  console.log();

$('선택자')
달러 앞 선택자는 css요소 부르는 것과 동일하게 부르면 됌
.method()
->method == (css, attr, index traverse, effect 등)
1) css 메소드
  .css({
    backgroundColor:'red',
    color:'white',
  })

2) attr 메소드  (요소가 가지는 속성을 추가, 변경할 수 있다)
  .attr('open','')
  .attr({
    src: 'img/w7.jpg',
    alt: 'w7')
  }};

3) traverse 메소드 (탐색구문)
  .parent() == 부모찾기
  .siblings() == 형제찾기
  .children() == 자식찾기
  .find() == 후속선택자찾기
    ex) $('div').find('span').css()
  .index() == 요소의 순번을 알려줌
  .eq() == nth-child() 순번을 매김, nth-child와 개념은 동일하나 차이점은 순번이 0부터 시작
  .next() == 다음찾기 (슬라이드에서 >)
  .prev() == 이전찾기 (슬라이드에서 <)
  .not() == 특정요소를 제외한 나머지한테 적용
  $('div p') == 하위요소
  .before() == 요소의 앞
  :last()

4) effect
  hide()
  show()
  fadeOut()
  fadeIn()
  slideUp()
  slideDown()

5) animate

6) if

7) 요소의 내용을 가져오거나 변경하는 method
  .html() == html 태그
  .text() == text

8) class
  addClass()
  removeClass()
  toggleClass() == add+remove
  hasClass() == 찾는 클래스가 있는지 확인하고 적용 (if문과 함께 많이 사용)
  
9) 지우는 메소드
  .remove() == html 태그 자체를 지워버림
  .empty() == html 태그 안의 콘텐츠 내용을 지움


*폼 요소의 입력 양식을 선택자로 부를 경우 콜론(:)을 붙여서 선택한다.
checkbox 체크되어있는 상태 == ('cheked',true) == (1)
checkbox 체크해제되어 있는 상태 == ('cheked',false) == (0)

select option 선택 상태 == ('seledted',true) == (1)
select option 선택 해제 == ('seledted',false) == (0)
